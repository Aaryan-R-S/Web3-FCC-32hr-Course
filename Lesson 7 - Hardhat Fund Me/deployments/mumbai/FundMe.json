{
  "address": "0x7b0927c6239Be985008f5B2FE1a5dC3ba8eaF634",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x57469d68befe6a9ff3664284c2e7f8c40962f2c748b61330cca10147a8b96b8e",
  "receipt": {
    "to": null,
    "from": "0xEcC946f4F2138269482f312BEA7cC435604343C2",
    "contractAddress": "0x7b0927c6239Be985008f5B2FE1a5dC3ba8eaF634",
    "transactionIndex": 1,
    "gasUsed": "955494",
    "logsBloom": "0x
    "blockHash": "0x192793237a807c55d6c2d3a1985337d9c8941dc352995d2dc9b5f358228d271d",
    "transactionHash": "0x57469d68befe6a9ff3664284c2e7f8c40962f2c748b61330cca10147a8b96b8e",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 27432133,
        "transactionHash": "0x57469d68befe6a9ff3664284c2e7f8c40962f2c748b61330cca10147a8b96b8e",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000ecc946f4f2138269482f312bea7cc435604343c2",
          "0x000000000000000000000000c26880a0af2ea0c7e8130e6ec47af756465452e8"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000a9bad6263d006a000000000000000000000000000000000000000000000000040c77e5cf7389cc0000000000000000000000000000000000000000000012bb8deaefeb9a43f9660000000000000000000000000000000000000000000000000362bd0fa93689620000000000000000000000000000000000000000000012bb8e94aac1c080f9d0",
        "logIndex": 3,
        "blockHash": "0x192793237a807c55d6c2d3a1985337d9c8941dc352995d2dc9b5f358228d271d"
      }
    ],
    "blockNumber": 27432133,
    "cumulativeGasUsed": "1078540",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x0715A7794a1dc8e42615F059dD6e406A6594651A"
  ],
  "numDeployments": 4,
  "solcInputHash": "9b97efcb1c09b642ca8a73ebe66ecd1c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    // defining our library functions to be available on uint256 object\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    // MORE GAS OPTIMIZED\\n    // Could we make this constant?  /* hint: no! We should make it immutable! As we have to define its value in the constructor later */\\n    address public /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 1 * 1e18;\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        // first parameter of getConversionRate will be msg.value. To pass the other parameters you have to ultimately give it to the function only as parameter like msg.value.getConversionRate(\\\"secondParams\\\")\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(L4_PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n    \\n    function getVersion() public view returns (uint256){\\n        return priceFeed.version();\\n    }\\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        // MORE GAS OPTIMIZED\\n        if (msg.sender != i_owner) revert NotOwner(); \\n        _;\\n    }\\n    \\n    function withdraw() payable onlyOwner public {\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n\\n        // For sending money, 3 Methods:\\n        // 1. Transfer - , error\\n        // 2. Send - , bool\\n        // 3. Call - , bool\\n\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\ \\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback() \\n    //     /   \\\\ \\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n}\",\"keccak256\":\"0xdd49adfa702b61a97816e5216a5e843a4b4f94583b6f9f97d7735ff08b620f32\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n// This is not a contract but a library. This is because we will be using it in FundMe.sol as (uint).someFunctionOfThisLibrary\\r\\nlibrary PriceConverter {\\r\\n    \\r\\n    // We could make this public, but then we'd have to deploy it. So its \\\"internal\\\" so that no one from outside can interact with it but can easily implement it\\r\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\r\\n        // Rinkeby ETH / USD Address\\r\\n        // https://docs.chain.link/docs/ethereum-addresses/\\r\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e);\\r\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\r\\n        // USD/ETH rate with 8 extra 0s for precision\\r\\n        return uint256(price * 1e10);   // here we are returning rate in USD/ETH * 1e18 (i.e. extra multiplier of 1e18 to have high precision instead of \\\"decimal\\\" which has low precision)\\r\\n    }\\r\\n\\r\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns (uint256){\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\r\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\r\\n        return ethAmountInUsd;  // here we are returning value in USD * 1e18\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x2898ec53c2189c95c402b2c76c9c200f219a8d82942a3c37ba037e7fef487436\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620010ea380380620010ea83398181016040528101906200003791906200012a565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b6200010481620000e5565b81146200011057600080fd5b50565b6000815190506200012481620000f9565b92915050565b600060208284031215620001435762000142620000c0565b5b6000620001538482850162000113565b91505092915050565b610f7e806200016c6000396000f3fe60806040526004361061007f5760003560e01c8063741bef1a1161004e578063741bef1a14610135578063b60d428814610160578063dba6335f1461016a578063dc0d3dff146101955761008e565b80630d8e6e2c146100985780633ccfd60b146100c35780633e47d6f3146100cd5780636b69a5921461010a5761008e565b3661008e5761008c6101d2565b005b6100966101d2565b005b3480156100a457600080fd5b506100ad61030b565b6040516100ba919061083f565b60405180910390f35b6100cb6103b2565b005b3480156100d957600080fd5b506100f460048036038101906100ef91906108bd565b6105f4565b604051610101919061083f565b60405180910390f35b34801561011657600080fd5b5061011f61060c565b60405161012c919061083f565b60405180910390f35b34801561014157600080fd5b5061014a610618565b6040516101579190610949565b60405180910390f35b6101686101d2565b005b34801561017657600080fd5b5061017f61063e565b60405161018c9190610973565b60405180910390f35b3480156101a157600080fd5b506101bc60048036038101906101b791906109ba565b610664565b6040516101c99190610973565b60405180910390f35b670de0b6b3a7640000610210600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106a390919063ffffffff16565b1015610251576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024890610a44565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461029f9190610a93565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561037557600080fd5b505afa158015610389573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ad9190610afe565b905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610439576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104e45760006001828154811061045f5761045e610b2b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104dc90610b5a565b91505061043c565b50600067ffffffffffffffff811115610500576104ff610ba3565b5b60405190808252806020026020018201604052801561052e5781602001602082028036833780820191505090505b506001908051906020019061054492919061077f565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161056b90610c03565b60006040518083038185875af1925050503d80600081146105a8576040519150601f19603f3d011682016040523d82523d6000602084013e6105ad565b606091505b50509050806105f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e890610c64565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b670de0b6b3a764000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061067457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106af836106df565b90506000670de0b6b3a764000085836106c89190610c84565b6106d29190610d0d565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561072857600080fd5b505afa15801561073c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107609190610db6565b5050509150506402540be400816107779190610e31565b915050919050565b8280548282559060005260206000209081019282156107f8579160200282015b828111156107f75782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061079f565b5b5090506108059190610809565b5090565b5b8082111561082257600081600090555060010161080a565b5090565b6000819050919050565b61083981610826565b82525050565b60006020820190506108546000830184610830565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061088a8261085f565b9050919050565b61089a8161087f565b81146108a557600080fd5b50565b6000813590506108b781610891565b92915050565b6000602082840312156108d3576108d261085a565b5b60006108e1848285016108a8565b91505092915050565b6000819050919050565b600061090f61090a6109058461085f565b6108ea565b61085f565b9050919050565b6000610921826108f4565b9050919050565b600061093382610916565b9050919050565b61094381610928565b82525050565b600060208201905061095e600083018461093a565b92915050565b61096d8161087f565b82525050565b60006020820190506109886000830184610964565b92915050565b61099781610826565b81146109a257600080fd5b50565b6000813590506109b48161098e565b92915050565b6000602082840312156109d0576109cf61085a565b5b60006109de848285016109a5565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a2e601b836109e7565b9150610a39826109f8565b602082019050919050565b60006020820190508181036000830152610a5d81610a21565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a9e82610826565b9150610aa983610826565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ade57610add610a64565b5b828201905092915050565b600081519050610af88161098e565b92915050565b600060208284031215610b1457610b1361085a565b5b6000610b2284828501610ae9565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b6582610826565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b9857610b97610a64565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610bed600083610bd2565b9150610bf882610bdd565b600082019050919050565b6000610c0e82610be0565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c4e600b836109e7565b9150610c5982610c18565b602082019050919050565b60006020820190508181036000830152610c7d81610c41565b9050919050565b6000610c8f82610826565b9150610c9a83610826565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610cd357610cd2610a64565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d1882610826565b9150610d2383610826565b925082610d3357610d32610cde565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d5d81610d3e565b8114610d6857600080fd5b50565b600081519050610d7a81610d54565b92915050565b6000819050919050565b610d9381610d80565b8114610d9e57600080fd5b50565b600081519050610db081610d8a565b92915050565b600080600080600060a08688031215610dd257610dd161085a565b5b6000610de088828901610d6b565b9550506020610df188828901610da1565b9450506040610e0288828901610ae9565b9350506060610e1388828901610ae9565b9250506080610e2488828901610d6b565b9150509295509295909350565b6000610e3c82610d80565b9150610e4783610d80565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e8657610e85610a64565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610ec357610ec2610a64565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610f0057610eff610a64565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f3d57610f3c610a64565b5b82820290509291505056fea264697066735822122037e1504f0ed0d959d715f45c9bd15e85bac712a21c937605deaf29f763f56f9964736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063741bef1a1161004e578063741bef1a14610135578063b60d428814610160578063dba6335f1461016a578063dc0d3dff146101955761008e565b80630d8e6e2c146100985780633ccfd60b146100c35780633e47d6f3146100cd5780636b69a5921461010a5761008e565b3661008e5761008c6101d2565b005b6100966101d2565b005b3480156100a457600080fd5b506100ad61030b565b6040516100ba919061083f565b60405180910390f35b6100cb6103b2565b005b3480156100d957600080fd5b506100f460048036038101906100ef91906108bd565b6105f4565b604051610101919061083f565b60405180910390f35b34801561011657600080fd5b5061011f61060c565b60405161012c919061083f565b60405180910390f35b34801561014157600080fd5b5061014a610618565b6040516101579190610949565b60405180910390f35b6101686101d2565b005b34801561017657600080fd5b5061017f61063e565b60405161018c9190610973565b60405180910390f35b3480156101a157600080fd5b506101bc60048036038101906101b791906109ba565b610664565b6040516101c99190610973565b60405180910390f35b670de0b6b3a7640000610210600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106a390919063ffffffff16565b1015610251576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024890610a44565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461029f9190610a93565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561037557600080fd5b505afa158015610389573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ad9190610afe565b905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610439576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104e45760006001828154811061045f5761045e610b2b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104dc90610b5a565b91505061043c565b50600067ffffffffffffffff811115610500576104ff610ba3565b5b60405190808252806020026020018201604052801561052e5781602001602082028036833780820191505090505b506001908051906020019061054492919061077f565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161056b90610c03565b60006040518083038185875af1925050503d80600081146105a8576040519150601f19603f3d011682016040523d82523d6000602084013e6105ad565b606091505b50509050806105f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e890610c64565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b670de0b6b3a764000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061067457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106af836106df565b90506000670de0b6b3a764000085836106c89190610c84565b6106d29190610d0d565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561072857600080fd5b505afa15801561073c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107609190610db6565b5050509150506402540be400816107779190610e31565b915050919050565b8280548282559060005260206000209081019282156107f8579160200282015b828111156107f75782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061079f565b5b5090506108059190610809565b5090565b5b8082111561082257600081600090555060010161080a565b5090565b6000819050919050565b61083981610826565b82525050565b60006020820190506108546000830184610830565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061088a8261085f565b9050919050565b61089a8161087f565b81146108a557600080fd5b50565b6000813590506108b781610891565b92915050565b6000602082840312156108d3576108d261085a565b5b60006108e1848285016108a8565b91505092915050565b6000819050919050565b600061090f61090a6109058461085f565b6108ea565b61085f565b9050919050565b6000610921826108f4565b9050919050565b600061093382610916565b9050919050565b61094381610928565b82525050565b600060208201905061095e600083018461093a565b92915050565b61096d8161087f565b82525050565b60006020820190506109886000830184610964565b92915050565b61099781610826565b81146109a257600080fd5b50565b6000813590506109b48161098e565b92915050565b6000602082840312156109d0576109cf61085a565b5b60006109de848285016109a5565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a2e601b836109e7565b9150610a39826109f8565b602082019050919050565b60006020820190508181036000830152610a5d81610a21565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a9e82610826565b9150610aa983610826565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ade57610add610a64565b5b828201905092915050565b600081519050610af88161098e565b92915050565b600060208284031215610b1457610b1361085a565b5b6000610b2284828501610ae9565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b6582610826565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b9857610b97610a64565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610bed600083610bd2565b9150610bf882610bdd565b600082019050919050565b6000610c0e82610be0565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c4e600b836109e7565b9150610c5982610c18565b602082019050919050565b60006020820190508181036000830152610c7d81610c41565b9050919050565b6000610c8f82610826565b9150610c9a83610826565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610cd357610cd2610a64565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d1882610826565b9150610d2383610826565b925082610d3357610d32610cde565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d5d81610d3e565b8114610d6857600080fd5b50565b600081519050610d7a81610d54565b92915050565b6000819050919050565b610d9381610d80565b8114610d9e57600080fd5b50565b600081519050610db081610d8a565b92915050565b600080600080600060a08688031215610dd257610dd161085a565b5b6000610de088828901610d6b565b9550506020610df188828901610da1565b9450506040610e0288828901610ae9565b9350506060610e1388828901610ae9565b9250506080610e2488828901610d6b565b9150509295509295909350565b6000610e3c82610d80565b9150610e4783610d80565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e8657610e85610a64565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610ec357610ec2610a64565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610f0057610eff610a64565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f3d57610f3c610a64565b5b82820290509291505056fea264697066735822122037e1504f0ed0d959d715f45c9bd15e85bac712a21c937605deaf29f763f56f9964736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}